clear all;
clc;
close all;

[IMU1, IMU2, IMU3, IMU4, RB1, RB2, RB3] = readMatrix('./data/20231214SUMdata1.csv');
% Extract quaternion part (last four columns)
quaternions1 = RB1(:, 4:7);
quaternions2 = RB2(:, 4:7);
quaternions3 = RB3(:, 4:7);
euler_angles1 = quat2eul(quaternions1,'ZYX')*180/pi;
euler_angles2 = quat2eul(quaternions2,'ZYX')*180/pi;
euler_angles3 = quat2eul(quaternions3,'ZYX')*180/pi;

%% 


%% plot




function [m1,m2,m3,m4,m5,m6,m7] = readMatrix(filename)
% Read the matrix from the CSV file
fullMatrix = readmatrix(filename);

% Check if the matrix has enough columns
totalColumnsNeeded = 3*4 + 7 + 7 + 7;
if size(fullMatrix, 2) < totalColumnsNeeded
    error('The matrix does not have enough columns.');
end

% Divide the matrix into five matrices
m1 = fullMatrix(:, 1:3);         % Columns 1 to 4
m2 = fullMatrix(:, 4:6);         % Columns 5 to 8
m3 = fullMatrix(:, 7:9);        % Columns 9 to 15
m4 = fullMatrix(:, 10:12);       % Columns 16 to 22
m5 = fullMatrix(:, 14:20);       % Columns 23 to 29
m6 = fullMatrix(:, 21:27);       % Columns 23 to 29
m7 = fullMatrix(:, 28:34);       % Columns 23 to 29

end

function subplotRB(RB,titlename)
% Assuming matrix3 is your 7-column matrix
% Extract quaternion part (last four columns)
quaternions = RB(:, 4:7);

% Convert quaternion to Euler angles (roll, pitch, yaw)
euler_angles = quat2eul(quaternions,'ZYX')*180/pi;

% Plotting
figure('Name', titlename);

% Plot the first three columns in the first row of subplots
for i = 1:3
    subplot(2, 3, i);
    plot(RB(:, i));
    title(['Position ' num2str(i)]);
end

% Plot Euler angles in the second row of subplots
for i = 1:3
    subplot(2, 3, i + 3);
    plot(euler_angles(:, i));
    title(['Euler Angle ' num2str(i)]);
end

end

function subplotIMU(IMU,titlename)
% Convert quaternion to Euler angles (roll, pitch, yaw)
euler_angles = IMU(:, 1:3);

% Plotting
figure('Name', titlename);

% Plot the first three columns in the first row of subplots
subplot(2, 3, 5);
plot(IMU(:, 4));
title('Position Angles');

% Plot Euler angles in the second row of subplots
for i = 1:3
    subplot(2, 3, i);
    plot(euler_angles(:, i));
    title(['Euler Angle ' num2str(i)]);
end

end

function filtered = LowPassFilter(data)
    % Filter parameters
    Fs = 50;  % Sampling frequency (e.g., 1000 Hz)
    Fc = 1; % Cutoff frequency for the low-pass filter (e.g., 100 Hz)

    % Normalize the frequency
    Wn = Fc/(Fs/2);

    % Design the filter
    [n, Wn] = buttord(Wn, Wn+0.1, 3, 40); % Filter order and parameters (these can be adjusted)
    [b, a] = butter(n, Wn, 'low');

    % Apply the filter
    filtered = filter(b, a, data);
end

